import unittest
from linear_congruential_generator import bsd_rand, msvcrt_rand

class TestLinearCongruentialGenerator(unittest.TestCase):

    def test_bsd_rand(self):
        # Test BSD rand with a known seed
        seed = 12345
        rand = bsd_rand(seed)
        
        # Expected sequence generated by BSD rand with seed 12345
        expected_sequence = [
            1406932606, 654583775, 1449466924, 229283573, 1109335178
        ]
        
        for expected_value in expected_sequence:
            self.assertEqual(rand(), expected_value)

    def test_msvcrt_rand(self):
        # Test MSVCRT rand with a known seed
        seed = 12345
        rand = msvcrt_rand(seed)
        
        # Expected sequence generated by MSVCRT rand with seed 12345
        expected_sequence = [
            0, 26977, 31250, 21504, 23954
        ]
        
        for expected_value in expected_sequence:
            self.assertEqual(rand(), expected_value)

    def test_bsd_rand_reproducibility(self):
        # Test that BSD rand produces the same sequence with the same seed
        seed = 67890
        rand1 = bsd_rand(seed)
        rand2 = bsd_rand(seed)
        
        for _ in range(5):
            self.assertEqual(rand1(), rand2())

    def test_msvcrt_rand_reproducibility(self):
        # Test that MSVCRT rand produces the same sequence with the same seed
        seed = 67890
        rand1 = msvcrt_rand(seed)
        rand2 = msvcrt_rand(seed)
        
        for _ in range(5):
            self.assertEqual(rand1(), rand2())

    def test_bsd_rand_range(self):
        # Test that BSD rand produces numbers in the correct range
        seed = 12345
        rand = bsd_rand(seed)
        
        for _ in range(100):
            value = rand()
            self.assertGreaterEqual(value, 0)
            self.assertLessEqual(value, 2147483647)

    def test_msvcrt_rand_range(self):
        # Test that MSVCRT rand produces numbers in the correct range
        seed = 12345
        rand = msvcrt_rand(seed)
        
        for _ in range(100):
            value = rand()
            self.assertGreaterEqual(value, 0)
            self.assertLessEqual(value, 32767)

if __name__ == '__main__':
    unittest.main()
